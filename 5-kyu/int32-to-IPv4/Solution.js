/**
 * @function int32ToIp
 * @param {number} int32
 * @returns {string}
*/

function int32ToIp(int32){
  // Преобразуем число в 32-битное двоичное представление, дополненное нулями слева
  let binary = int32.toString(2).padStart(32, '0');
  
  // Разбиваем на 4 октета по 8 бит
  let octets = [];
  for (let i = 0; i < 4; i++) {
    const start = i * 8;
    const end = start + 8;
    const octetBinary = binary.slice(start, end);
    // Преобразуем двоичную строку октета в десятичное число
    const octet = parseInt(octetBinary, 2);
    octets.push(octet);
  }
  
  // Объединяем октеты в строку IPv4 адреса
  return octets.join('.');
}

/*
Как это работает:
  - Сначала мы преобразуем входное 32-битное число в его двоичное представление с помощью toString(2).
  - Дополняем строку нулями слева до 32 символов с помощью padStart(32, '0'), чтобы гарантировать, что у нас всегда 32 бита.
  - Разбиваем 32-битную строку на 4 части по 8 бит (октеты).
  - Каждый октет (двоичную строку) преобразуем обратно в десятичное число с помощью parseInt(octetBinary, 2).
  - Объединяем полученные числа в строку, разделяя точками.
*/